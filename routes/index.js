var express = require('express');
var router = express.Router();



const itemlist = [
  { 'id': 'ID', 'Term': 'Term', 'Description': 'Description', 'Reference': 'Reference'},
  { 'id': 1, 'Term': 'Continuous Integration (CI)', 'Description': 'Continuous Integration is a software development practice in which code changes are frequently and automatically integrated into a shared repository. Developers regularly merge their code into the main branch, triggering automated tests and build processes to detect integration issues early in the development cycle.', 'Reference': 'Martin Fowler. "Continuous Integration." Martin Fowlers website. URL:https://martinfowler.com/articles/continuousIntegration.html'},
  { 'id': 2, 'Term': 'Continuous Deployment (CD)', 'Description': 'Continuous Deployment is an extension of Continuous Integration, where code changes that pass all automated tests are automatically deployed to production environments. This practice aims to deliver software updates to users as soon as they are ready, ensuring a continuous flow of changes and improvements.', 'Reference': 'ThoughtWorks. "Continuous Deployment." ThoughtWorks Insights.URL: https://www.thoughtworks.com/continuous-deployment'},
  { 'id': 3, 'Term': 'Infrastructure as Code (IaC)', 'Description': 'Infrastructure as Code is a DevOps practice that involves managing and provisioning infrastructure resources (e.g., servers, networks, and storage) using machine-readable definition files. This approach allows developers to treat infrastructure configurations as code, enabling versioning, automated deployments, and consistency across environments.', 'Reference': 'HashiCorp. "Infrastructure as Code (IaC) - What, Why, and How." HashiCorp Learn.URL: https://learn.hashicorp.com/tutorials/terraform/infrastructure-as-code'},
  { 'id': 4, 'Term': 'Microservices', 'Description': 'Microservices is an architectural pattern where a software application is broken down into small, loosely-coupled, and independently deployable services. Each service focuses on a specific functionality and communicates with others through well-defined APIs. This approach promotes flexibility, scalability, and easier maintenance of complex systems.', 'Reference': 'Fowler, M. (2014). "Microservices: a definition of this new architectural term." Martin Fowlers website.URL: https://martinfowler.com/articles/microservices.html'},
  { 'id': 5, 'Term': 'Blue-Green Deployment:', 'Description': 'Blue-Green Deployment is a technique used for releasing new versions of an application with minimal downtime and risk. In this approach, two identical environments (blue and green) are set up. The current version of the application runs in one environment while the new version is deployed in the other. After successful testing, the traffic is switched from the old version to the new one, minimizing disruption.', 'Reference': 'Martin Fowler. "BlueGreenDeployment." Martin Fowlers website.URL: https://martinfowler.com/bliki/BlueGreenDeployment.html'},
  { 'id': 6, 'Term': 'Canary Deployment', 'Description': 'Canary Deployment is a deployment strategy that involves gradually rolling out a new version of the software to a subset of users or servers before releasing it to the entire user base. This allows for early detection of potential issues and reduces the impact of bugs or performance problems on the entire system.', 'Reference': 'Microsoft Azure. "Understanding canary deployment in Azure API Management." Microsoft Docs.URL: https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-canary-operations'},
  { 'id': 7, 'Term': 'Configuration Management', 'Description': 'Configuration Management is the process of maintaining and controlling the configuration of software systems and infrastructure throughout their lifecycle. It involves managing changes, ensuring consistency, and tracking configurations to prevent conflicts and maintain system stability.', 'Reference': 'Red Hat. "What is configuration management?" Red Hat Insights.URL: https://www.redhat.com/en/topics/automation/what-is-configuration-management'},
  { 'id': 8, 'Term': 'DevOps Culture', 'Description': 'DevOps Culture refers to a set of practices, values, and principles that emphasize collaboration, communication, and shared responsibility between software development and IT operations teams. The goal is to break down silos, foster a culture of trust, and align everyone towards the common objective of delivering high-quality software quickly and reliably.', 'Reference': 'Humble, J., & Farley, D. (2010). "Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation." Addison-Wesley Professional.'},
  { 'id': 9, 'Term': 'Version Control System', 'Description': 'A Version Control System is a tool that helps developers track and manage changes to their codebase over time. It allows multiple developers to work on the same project simultaneously, providing features like branching, merging, and history tracking, which are essential for successful collaboration and code management.', 'Reference': 'Atlassian. "What is version control?" Atlassian Git Tutorial.URL: https://www.atlassian.com/git/tutorials/what-is-version-control'},
  { 'id': 10, 'Term': 'Incident Management', 'Description': 'Incident Management is the process of identifying, prioritizing, and resolving incidents or disruptions that occur in a software system or IT infrastructure. The aim is to restore normal operation as quickly as possible and minimize the impact on users, following predefined procedures and communication protocols.', 'Reference': 'ServiceNow. "Incident Management." ServiceNow Documentation.URL: https://docs.servicenow.com/bundle/paris-it-service-management/page/product/incident-management/concept/c_IncidentManagement.html'},
  { 'id': 11, 'Term': 'Containerization', 'Description': 'Containerization is a virtualization method that allows developers to package applications and their dependencies in isolated containers. Containers provide a consistent runtime environment, enabling applications to run consistently across different environments.', 'Reference': 'Docker. "Get Started with Docker." Docker Documentation.URL: https://docs.docker.com/get-started/'},
  { 'id': 12, 'Term': 'Orchestration', 'Description': 'Orchestration refers to the automated management and coordination of containers or services within a distributed system. It handles tasks like provisioning, scaling, and networking to ensure efficient deployment and operation of applications.', 'Reference': 'Kubernetes. "What is Kubernetes?" Kubernetes Documentation.URL: https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/'},
  { 'id': 13, 'Term': 'Agile Development', 'Description': 'Agile Development is an iterative and incremental approach to software development. It emphasizes collaboration, adaptive planning, and continuous feedback to deliver high-quality products efficiently.', 'Reference': 'Agile Alliance. "The Agile Manifesto." Agile Alliance website.URL: https://agilemanifesto.org/'},
  { 'id': 14, 'Term': 'Site Reliability Engineering (SRE)', 'Description': 'Site Reliability Engineering is a discipline that combines software engineering and IT operations to ensure reliable and scalable systems. SRE teams focus on building robust, efficient, and highly available infrastructure and applications.', 'Reference': 'Google Cloud. "Site Reliability Engineering." Google SRE Resources.URL: https://sre.google/resources/'},
  { 'id': 15, 'Term': 'Infrastructure Automation', 'Description': 'Infrastructure Automation involves using tools and processes to automate the configuration, provisioning, and management of IT infrastructure. It helps streamline repetitive tasks and ensures consistency across environments.', 'Reference': 'Ansible. "What is Ansible?" Ansible Documentation.URL: https://www.ansible.com/resources/get-started'},
  { 'id': 16, 'Term': 'Monitoring and Alerting', 'Description': 'Monitoring and Alerting are essential practices in DevOps, involving the continuous monitoring of systems and applications to detect issues and trigger alerts for timely responses.', 'Reference': 'Prometheus. "Monitoring and Alerting Overview." Prometheus Documentation.URL: https://prometheus.io/docs/prometheus/latest/getting_started/'},
  { 'id': 17, 'Term': 'GitOps', 'Description': 'GitOps is an operational practice that uses Git as a single source of truth for defining infrastructure and application changes. All changes are made through version-controlled Git repositories, leading to automated deployments.', 'Reference': 'Weaveworks. "What is GitOps?" Weaveworks website.URL: https://www.weave.works/technologies/gitops/'},
  { 'id': 18, 'Term': 'ChatOps', 'Description': 'ChatOps is a collaboration model where developers use chat platforms or bots to interact with automation tools and perform various tasks, such as deployments, monitoring, and incident management.', 'Reference': 'Atlassian. "ChatOps: What it is and why you need it." Atlassian Blog.URL: https://www.atlassian.com/blog/software-teams/what-is-chatops-adoption-guide'},
  { 'id': 19, 'Term': 'DevSecOps', 'Description': 'DevSecOps integrates security practices into the DevOps workflow, emphasizing the importance of addressing security concerns early in the software development process.', 'Reference': 'OWASP. "DevSecOps - Integrating Security into DevOps." OWASP website.URL: https://owasp.org/www-project-devsecops-maturity-model/'},
  { 'id': 20, 'Term': 'Infrastructure as a Service (IaaS)', 'Description': 'Infrastructure as a Service is a cloud computing model where virtualized resources, such as virtual machines and storage, are provided over the internet. Users can manage and control these resources without the need for physical hardware.', 'Reference': 'Microsoft Azure. "What is IaaS?" Microsoft Azure Documentation.URL: https://azure.microsoft.com/en-us/overview/what-is-iaas/'},
  { 'id': 21, 'Term': 'Immutable Infrastructure', 'Description': ' Immutable infrastructure is an approach where infrastructure components, once created, are never modified. Instead, new components are created to replace the old ones when changes are needed.', 'Reference': 'Nell-Shenoy, T. (2013). "Immutable Infrastructure: What Is It and Why Do I Need It?" ThoughtWorks Insights. URL: https://www.thoughtworks.com/insights/blog/immutable-infrastructure-what-is-it-and-why-do-i-need-it'},
  { 'id': 22, 'Term': 'Chaos Engineering', 'Description': 'Chaos Engineering is a practice that involves intentionally injecting failures and disruptions into a system to assess its resilience and identify weaknesses.', 'Reference': 'Gremlin. "Chaos Engineering: A Comprehensive Guide."URL: https://www.gremlin.com/chaos-engineering/'},
  { 'id': 23, 'Term': 'Pipeline as Code', 'Description': 'Pipeline as Code is an approach where the entire software delivery pipeline, including build, test, and deployment processes, is defined and managed using code.', 'Reference': 'Jenkins. "Pipeline as Code."URL: https://www.jenkins.io/doc/book/pipeline-as-code/'},
  { 'id': 24, 'Term': 'Infrastructure as a Code (IaaC)', 'Description': 'Infrastructure as Code (IaaC) is the practice of managing and provisioning infrastructure using code and automation tools, treating infrastructure like software.', 'Reference': 'AWS. "What Is Infrastructure as Code (IAC)?"URL: https://aws.amazon.com/devops/what-is-infrastructure-as-code/'},
  { 'id': 25, 'Term': 'Serverless Computing', 'Description': ' Serverless computing is a cloud computing model where cloud providers automatically manage the infrastructure, and developers focus solely on writing and deploying code.', 'Reference': 'AWS. "What is Serverless Computing?"URL: https://aws.amazon.com/serverless/what-is-serverless/'},
  { 'id': 26, 'Term': 'Kanban', 'Description': 'Kanban is a visual workflow management system that helps teams visualize work, limit work in progress, and optimize their processes for continuous improvement.', 'Reference': 'LeanKit. "Kanban 101: How to Use Kanban Boards to Manage Your Work."URL: https://www.leankit.com/learn/kanban/what-is-kanban/'},
  { 'id': 27, 'Term': 'Incident Response Plan', 'Description': 'An Incident Response Plan is a predefined set of procedures and actions that organizations follow when security incidents or operational disruptions occur.', 'Reference': 'NIST. "Computer Security Incident Handling Guide."URL: https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-61r2.pdf'},
  { 'id': 28, 'Term': 'Version Control', 'Description': 'Version control is a system that records changes to a file or set of files over time, enabling developers to track and manage revisions and collaborate effectively.', 'Reference': 'Git. "Getting Started - About Version Control."URL: https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control'},
  { 'id': 29, 'Term': 'Infrastructure Monitoring', 'Description': 'Infrastructure monitoring involves the real-time tracking and analysis of the performance and health of an organizations IT infrastructure, including servers, networks, and databases.', 'Reference': 'Datadog. "What Is Infrastructure Monitoring?"URL: https://www.datadog.com/what-is-infrastructure-monitoring'},
  { 'id': 30, 'Term': 'Artifact Repository', 'Description': 'An Artifact Repository is a centralized storage location for software artifacts, such as binaries and libraries, making them easily accessible for software builds and deployments.', 'Reference': 'JFrog. "What Is an Artifact Repository?"URL: https://jfrog.com/artifact-repository/'},
  { 'id': 31, 'Term': 'Continuous Security', 'Description': 'Continuous Security integrates security practices into the DevOps pipeline, allowing for automated security checks and threat detection throughout the software development lifecycle.', 'Reference': 'Synopsys. "Continuous Security for DevOps."URL: https://www.synopsys.com/software-integrity/resources/glossary/what-is-continuous-security.html'},
  { 'id': 32, 'Term': 'Infrastructure as a Service (IaaS)', 'Description': 'Infrastructure as a Service (IaaS) is a cloud computing model that provides virtualized computing resources over the internet, including servers, storage, and networking.', 'Reference': 'Amazon Web Services (AWS). "What Is Infrastructure as a Service (IaaS)?"URL: https://aws.amazon.com/what-is-iaas/'},
  { 'id': 33, 'Term': 'Serverless Framework', 'Description': 'The Serverless Framework is an open-source toolkit for building and deploying serverless applications, simplifying the development and management of serverless functions.', 'Reference': 'Serverless Framework Documentation.URL: https://www.serverless.com/framework/docs/'},
  { 'id': 34, 'Term': 'Fault Tolerance', 'Description': 'Fault Tolerance is the ability of a system to continue functioning without interruption in the presence of hardware or software failures.', 'Reference': 'TechTarget. "Fault tolerance."URL: https://searchdatacenter.techtarget.com/definition/fault-tolerance'},
  { 'id': 35, 'Term': 'Infrastructure as a Code (IaC) Template', 'Description': 'An IaC Template is a declarative or imperative configuration file used to define infrastructure resources and their properties in an Infrastructure as Code (IaC) system.', 'Reference': 'HashiCorp Terraform. "Configuration Language."URL: https://www.terraform.io/docs/configuration/index.html'},
  { 'id': 36, 'Term': 'Performance Monitoring', 'Description': 'Performance Monitoring involves measuring and analyzing the performance of software applications and infrastructure to identify bottlenecks and optimize performance.', 'Reference': 'New Relic. "What Is Performance Monitoring?"URL: https://newrelic.com/performance'},
  { 'id': 37, 'Term': 'Rollback', 'Description': 'Rollback is the process of reverting a system or application to a previous state or version, often used when a deployment or update causes issues.', 'Reference': 'Techopedia. "Rollback."URL: https://www.techopedia.com/definition/22160/rollback'},
  { 'id': 38, 'Term': 'Dark Launch', 'Description':' Dark Launch is a technique where new features or code changes are deployed to production but remain hidden from users, allowing for testing and validation without user impact.', 'Reference': 'LaunchDarkly. "What Is Dark Launch?"URL: https://launchdarkly.com/blog/what-is-a-dark-launch/'},
  { 'id': 39, 'Term': 'Infrastructure as Code (IaC) Pipeline', 'Description': 'An IaC Pipeline is a series of automated steps for provisioning and managing infrastructure using Infrastructure as Code practices.', 'Reference': 'Terraform. "Continuous Delivery Using Infrastructure as Code."URL: https://www.terraform.io/guides/continuous-delivery.html'},
  { 'id': 40, 'Term': 'Immutable Infrastructure Pattern', 'Description': 'The Immutable Infrastructure Pattern is a design approach where servers and infrastructure components are never modified after creation, reducing configuration drift and increasing reliability.', 'Reference': 'ThoughtWorks. "Immutable Infrastructure Patterns and Practices."URL: https://www.thoughtworks.com/insights/blog/immutable-infrastructure-patterns-and-practices'},
  { 'id': 41, 'Term': 'Infrastructure as Code (IaC) Testing', 'Description': 'IaC Testing involves assessing the code used to provision and manage infrastructure to ensure it is error-free and compliant with best practices.', 'Reference': 'Chef InSpec. "Infrastructure Testing with InSpec."URL: https://www.inspec.io/docs/'},
  { 'id': 42, 'Term': 'GitLab CI/CD', 'Description': 'GitLab CI/CD is a built-in Continuous Integration and Continuous Deployment (CI/CD) platform within GitLab for automating software development workflows.', 'Reference': 'GitLab CI/CD Documentation.URL: https://docs.gitlab.com/ee/ci/'},
  { 'id': 43, 'Term': 'Feature Flagging', 'Description': 'Feature Flagging, also known as feature toggles or feature switches, allows developers to enable or disable specific features in a software application without redeploying code.', 'Reference': 'Optimizely. "Feature Flagging vs. Feature Toggles: The Pros and Cons."URL: https://www.optimizely.com/optimization-glossary/feature-flags/'},
  { 'id': 44, 'Term': 'Infrastructure as a Service (IaaS) Provider', 'Description': 'An IaaS Provider is a cloud service provider that offers infrastructure resources such as virtual machines, storage, and networking on a pay-as-you-go basis.', 'Reference': 'Microsoft Azure. "What Is Infrastructure as a Service (IaaS)?"URL: https://azure.microsoft.com/en-us/overview/what-is-iaas/'},
  { 'id': 45, 'Term': 'Traceability', 'Description': 'Traceability is the ability to track changes or events throughout the software development lifecycle, ensuring visibility and accountability.', 'Reference': 'IEEE Xplore. "Traceability in Software Engineering: The Need for a Tailored Approach."URL: https://ieeexplore.ieee.org/abstract/document/7123545'},
  { 'id': 46, 'Term': 'Secrets Management Tool', 'Description': 'A Secrets Management Tool is a software solution used to securely store, access, and manage sensitive information like API keys, passwords, and encryption keys.', 'Reference': 'HashiCorp Vault. "Introduction to HashiCorp Vault."URL: https://www.vaultproject.io/docs/intro'},
  { 'id': 47, 'Term': 'Infrastructure as Code (IaC) Framework', 'Description': 'An IaC Framework is a set of pre-defined conventions and tools that simplify the creation and management of infrastructure using code.', 'Reference': 'AWS Cloud Development Kit (CDK).URL: https://aws.amazon.com/cdk/'},
  { 'id': 48, 'Term': 'Continuous Documentation', 'Description': 'Continuous Documentation is the practice of maintaining and updating documentation alongside code changes, ensuring that documentation remains accurate and up-to-date.', 'Reference': ' Read the Docs. "Introduction to Continuous Documentation."URL: https://docs.readthedocs.io/en/stable/intro/getting-started-with-continuous.html'},
  { 'id': 49, 'Term': 'Self-Healing Systems', 'Description': 'Self-Healing Systems are designed to automatically detect and recover from failures or issues without human intervention, enhancing system reliability.', 'Reference': 'IBM Developer. "Self-healing Systems in Microservices."URL: https://developer.ibm.com/technologies/microservices/tutorials/micro-self-healing/'},
  { 'id': 50, 'Term': 'Infrastructure as a Service (IaaS) Cost Management', 'Description': 'IaaS Cost Management involves tracking, optimizing, and controlling the expenses associated with infrastructure resources in a cloud-based IaaS environment.', 'Reference': ' AWS Cost Explorer.URL: https://aws.amazon.com/aws-cost-management/aws-cost'},
];

/* GET home page. */
router.get('/', function (req, res, next) {
  res.render('index', { title: 'SIT722 DevOps Glossary', sub: 'my website showing a collection of DevOps terms and their brief Descriptions.',
   items: itemlist });
});

module.exports = router;